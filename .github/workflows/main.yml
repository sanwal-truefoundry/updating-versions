name: Updating Version

on: [workflow_dispatch, push]

jobs:
  build:
    name: Updating Version
    runs-on: ubuntu-latest

    outputs:
      output1: ${{ steps.pl.outputs.new-version-1 }}
      output2: ${{ steps.pl.outputs.new-version-2 }}
      output3: ${{ steps.pl.outputs.new-version-3 }}
      output4: ${{ steps.pl.outputs.new-version-4 }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Fetch version
        id: pl
        uses: sanwal-truefoundry/updating-versions@main
        with:
          file-1: 'mlfoundry-server.yml'
          file-2: 'servicefoundry-server.yml'
          file-3: 'truefoundry-frontend-app.yml'
          file-4: 'version-2.yml'
      
      - name: Output results
        run: |
          echo ${{ steps.pl.outputs.new-version-1 }}
          echo ${{ steps.pl.outputs.new-version-2 }}
          echo ${{ steps.pl.outputs.new-version-3 }}
          echo ${{ steps.pl.outputs.new-version-4 }}
      
      - name: Update1 version.yml
        uses: fjogeleit/yaml-update-action@main
        with:
          valueFile: 'mlfoundry-server.yml'
          propertyPath: 'version'
          value: ${{ steps.pl.outputs.new-version-1 }}
          branch: main
          targetBranch: main
          commitChange: 'true'
          updateFile: 'true'

      
      - name: Update2 version.yml
        uses: fjogeleit/yaml-update-action@main
        with:
          valueFile: 'servicefoundry-server.yml'
          propertyPath: 'version'
          value: ${{ steps.pl.outputs.new-version-2 }}
          branch: main
          targetBranch: main
          commitChange: 'true'
          updateFile: 'true'

      
      - name: Update3 version.yml
        uses: fjogeleit/yaml-update-action@main
        with:
          valueFile: 'truefoundry-frontend-app.yml'
          propertyPath: 'version'
          value: ${{ steps.pl.outputs.new-version-3 }}
          branch: main
          targetBranch: main
          commitChange: 'true'
          updateFile: 'true'

  print:
    name: Printing version file
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cat Updated1 version.yml
        run: cat mlfoundry-server.yml

      - name: Cat Updated2 version.yml
        run: cat servicefoundry-server.yml

      - name: Cat Updated3 version.yml
        run: cat truefoundry-frontend-app.yml
  
  notify:
    name: Updating Version 2
    needs: [print,build]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Output results
        run: |
          echo ${{ needs.build.outputs.output4 }}

      - name: Update version.yml
        uses: fjogeleit/yaml-update-action@main
        with:
          valueFile: 'version2.yml'
          propertyPath: 'version'
          value: ${{ needs.build.outputs.output4 }}
          branch: main
          targetBranch: main
          commitChange: 'true'
          updateFile: 'true'

      - name: Update version.yml
        uses: fjogeleit/yaml-update-action@main
        with:
          valueFile: 'version2.yml'
          propertyPath: 'dependencies.-version'
          value: ${{ needs.build.outputs.output1 }}
          branch: main
          targetBranch: main
          commitChange: 'true'
          updateFile: 'true'